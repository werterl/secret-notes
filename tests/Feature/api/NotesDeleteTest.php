<?php

namespace Tests\Feature\api;

use App\Models\Note;
use App\Enums\ErrorEnum;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Str;
use Tests\TestCase;

class NotesDeleteTest extends TestCase
{
    use RefreshDatabase;
    protected Note $noteCreated;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->noteCreated = Note::factory()->create();
    }

    public function testNoteDeleteSuccess(): void
    {
        $response = $this->delete('/api/notes/'.$this->noteCreated->id, ['delete_token' => $this->noteCreated->delete_token]);

        $response->assertStatus(204);
        $this->assertDatabaseMissing('notes', ['id' => $this->noteCreated->id]);
    }

    public function testNoteDeleteTokenIncorrectThrowError(): void
    {
        $response = $this->delete('/api/notes/'.$this->noteCreated->id, ['delete_token' => Str::random(20)]);

        $response
            ->assertStatus(403)
            ->assertJson(['errors' => ['message' => (string) ErrorEnum::ACCESS_NOTE->value]]);

        $this->assertDatabaseHas('notes', ['id' => $this->noteCreated->id]);
    }
}
